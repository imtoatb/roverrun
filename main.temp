#include <stdio.h>
#include "pathfinding.h"
#include <math.h>

// Sample map for testing
int map[ROWS][COLS] = {
    {7, 3, 2, 2, 10002, 13},
    {3, 1, 0, 1, 5, 9},
    {3, 2, 1, 5, 6, 7},
    {5, 3, 10001, 9, 7, 8},
    {7, 5, 9, 13, 8, 9},
    {8, 6, 7, 14, 9, 10},
    {10, 8, 9, 10014, 10, 11}
};

int main() {
    // Set up variables
    int startX = 0, startY = 0;  // Starting position
    int targetTile = 0;          // Target tile value (e.g., find "1" on the map)

    // Clear the allPaths array
    for (int i = 0; i < MAX_PATHS; i++) {
        allPaths[i].length = 0;
        allPaths[i].cost = MAX_COST; // Initialize to max cost
    }

    // Initialize a Path object for tracking the current path
    Path currentPath;
    currentPath.length = 0;
    currentPath.cost = 0;

    // Perform DFS to find paths
    printf("Finding paths from (%d, %d) to target tile %d...\n\n", startX, startY, targetTile);
    dfs(startX, startY, 0, map, targetTile, currentPath, 1);

    // Print the results
    printf("Top %d shortest paths found:\n", MAX_PATHS);
    for (int i = 0; i < MAX_PATHS; i++) {
        if (allPaths[i].length > 0) {
            printf("Path %d: ", i + 1);
            printPath(allPaths[i]);
        } else {
            printf("Path %d: No valid path found.\n", i + 1);
        }
    }

    return 0;
}
